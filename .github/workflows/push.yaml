on: push
name: deploy
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  # deploy-to-cluster:
  #   name: deploy to cluster
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #   - name: deploy to cluster
  #     uses: steebchen/kubectl@master
  #     env:
  #       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #     with:
  #       args: set image --record deployment/my-app prueba-gha=${{ github.repository }}:${{ github.sha }}
  #   - name: verify deployment
  #     uses: steebchen/kubectl@master
  #     env:
  #       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #       KUBECTL_VERSION: "1.20"
  #     with:
  #       args: '"rollout status deployment/my-app"'
  # ngrok-watcher:
  #   name: Ngrok watcher
  #   runs-on: ubuntu-latest
  #   needs: deploy-to-cluster
  #   steps:
  #   - name: Get ngrok URL
  #     id: getNgrokUrl
  #     uses: debianmaster/kubectl@master
  #     env:
  #       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #       KUBECTL_VERSION: "1.20"
  #     with:
  #       args: |
  #         URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
  #         echo "::set-output name=url::$URL"
  # - name: Check if URL is valid
  #   uses: ubuntu-latest
  #   run: |
  #     echo "URL is: ${{ steps.getNgrokUrl.outputs.url }}"
  # - name: Watch ngrok
  # uses: steebchen/kubectl@master
  # env:
  #   KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #   KUBECTL_VERSION: "1.20"
  # run: echo "Hello world"
  # # with:
  # #   args: '"rollout status deployment/my-app"'
